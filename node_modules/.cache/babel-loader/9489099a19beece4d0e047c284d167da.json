{"ast":null,"code":"import _slicedToArray from\"C:/Users/bhask/Desktop/Vaastroopers/vaastroopers/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Main from\"./components/Main\";import Nav from\"./components/Nav\";import About from\"./components/About\";import React from\"react\";import axios from'axios';import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import Footer from\"./components/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";toast.configure();function App(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),address=_React$useState2[0],setAddress=_React$useState2[1];function handleConnect(){if(window.ethereum&&window.ethereum.isMetaMask){window.ethereum.request({method:'eth_requestAccounts'}).then(function(result){return setAddress(function(){return result[0];});});}else{toast.error(\"Metamask not installed.\",{position:toast.POSITION.BOTTOM_RIGHT});}}function handleDisconnect(){setAddress(\"\");}window.ethereum.on('accountsChanged',handleConnect);var handleSubmit=function handleSubmit(e){e.preventDefault();var objt={address:address};axios.post(process.env.REACT_APP_SHEETAPI,objt).then(function(response){if(response.status=200&&address!=\"\"){toast(\"Address submitted successfully.\",{position:toast.POSITION.BOTTOM_RIGHT});}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Nav,{handleConnect:handleConnect,address:address,handleDisconnect:handleDisconnect}),/*#__PURE__*/_jsx(Main,{address:address,setAddress:setAddress,handleSubmit:handleSubmit}),/*#__PURE__*/_jsx(About,{}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;// window.ethereum.request({\n//   method: \"wallet_requestPermissions\",\n//   params: [{\n//       eth_accounts: {}\n//   }]\n// }).then(() => window.ethereum.request({\n//   method: 'eth_requestAccounts'\n// })).then(() => setAddress(\"\"))\n// window.ethereum.request({method:'eth_requestAccounts'})\n// .then(result => setAddress(result[0]))","map":{"version":3,"sources":["C:/Users/bhask/Desktop/Vaastroopers/vaastroopers/src/App.js"],"names":["Main","Nav","About","React","axios","toast","Footer","configure","App","useState","address","setAddress","handleConnect","window","ethereum","isMetaMask","request","method","then","result","error","position","POSITION","BOTTOM_RIGHT","handleDisconnect","on","handleSubmit","e","preventDefault","objt","post","process","env","REACT_APP_SHEETAPI","response","status"],"mappings":"sIAAA,MAAOA,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAO,uCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAGAD,KAAK,CAACE,SAAN,GACA,QAASC,CAAAA,GAAT,EAAe,CACb,oBAA6BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA7B,oDAAOC,OAAP,qBAAeC,UAAf,qBAEA,QAASC,CAAAA,aAAT,EAAwB,CACtB,GAAGC,MAAM,CAACC,QAAP,EAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAtC,CAAiD,CACjDF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB,CAACC,MAAM,CAAC,qBAAR,CAAxB,EACCC,IADD,CACM,SAAAC,MAAM,QAAIR,CAAAA,UAAU,CAAC,iBAAIQ,CAAAA,MAAM,CAAC,CAAD,CAAV,EAAD,CAAd,EADZ,EAEC,CAHD,IAII,CACFd,KAAK,CAACe,KAAN,CAAY,yBAAZ,CAAsC,CAACC,QAAQ,CAAChB,KAAK,CAACiB,QAAN,CAAeC,YAAzB,CAAtC,EACD,CAEF,CACD,QAASC,CAAAA,gBAAT,EAA2B,CACzBb,UAAU,CAAC,EAAD,CAAV,CACD,CACDE,MAAM,CAACC,QAAP,CAAgBW,EAAhB,CAAmB,iBAAnB,CAAsCb,aAAtC,EACD,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,IAAI,CAAG,CAAEnB,OAAO,CAAPA,OAAF,CAAb,CAEAN,KAAK,CACH0B,IADF,CAEEC,OAAO,CAACC,GAAR,CAAYC,kBAFd,CAGEJ,IAHF,EAKEX,IALF,CAKO,SAACgB,QAAD,CAAc,CACnB,GAAGA,QAAQ,CAACC,MAAT,CAAkB,KAAOzB,OAAO,EAAE,EAArC,CAAwC,CAClCL,KAAK,CAAC,iCAAD,CAAmC,CAACgB,QAAQ,CAAChB,KAAK,CAACiB,QAAN,CAAeC,YAAzB,CAAnC,CAAL,CACD,CACL,CATF,EAUA,CAfD,CAiBC,mBACC,oCACE,KAAC,GAAD,EAAK,aAAa,CAAEX,aAApB,CAAmC,OAAO,CAAEF,OAA5C,CAAqD,gBAAgB,CAAEc,gBAAvE,EADF,cAEE,KAAC,IAAD,EAAM,OAAO,CAAEd,OAAf,CAAwB,UAAU,CAAEC,UAApC,CAAgD,YAAY,CAAEe,YAA9D,EAFF,cAGE,KAAC,KAAD,IAHF,cAIE,KAAC,MAAD,IAJF,GADD,CAQD,CAED,cAAelB,CAAAA,GAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA","sourcesContent":["import Main from \"./components/Main\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport React from \"react\"\nimport axios from 'axios';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"\nimport Footer from \"./components/Footer\";\n\n\ntoast.configure()\nfunction App() {\n  const [address,setAddress] = React.useState(\"\")\n\n  function handleConnect(){\n    if(window.ethereum && window.ethereum.isMetaMask){\n    window.ethereum.request({method:'eth_requestAccounts'})\n    .then(result => setAddress(()=>result[0]))\n    }\n    else{\n      toast.error(\"Metamask not installed.\",{position:toast.POSITION.BOTTOM_RIGHT})\n    }\n\n  }\n  function handleDisconnect(){\n    setAddress(\"\")    \n  }\n  window.ethereum.on('accountsChanged', handleConnect);\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst objt = { address };\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\tprocess.env.REACT_APP_SHEETAPI,\n\t\t\t\tobjt\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.status = 200 && address!=\"\"){\n          toast(\"Address submitted successfully.\",{position:toast.POSITION.BOTTOM_RIGHT})\n        }\n\t\t\t});\n\t};\n\n  return (\n   <div>\n     <Nav handleConnect={handleConnect} address={address} handleDisconnect={handleDisconnect} />\n     <Main address={address} setAddress={setAddress} handleSubmit={handleSubmit}/>\n     <About/>\n     <Footer/>\n   </div>\n  );\n}\n\nexport default App;\n\n// window.ethereum.request({\n//   method: \"wallet_requestPermissions\",\n//   params: [{\n//       eth_accounts: {}\n//   }]\n// }).then(() => window.ethereum.request({\n//   method: 'eth_requestAccounts'\n// })).then(() => setAddress(\"\"))\n\n\n// window.ethereum.request({method:'eth_requestAccounts'})\n// .then(result => setAddress(result[0]))\n\n"]},"metadata":{},"sourceType":"module"}